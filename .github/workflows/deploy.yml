name: Deploy

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Release version (e.g. 3)"
        required: true
        type: string

env:
  REGISTRY: cr.yandex/crplgh0146jj4ahh90mc
  REGISTRY_ID: crplgh0146jj4ahh90mc
  IMAGE_NAME: app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check if Docker image exists
        env:
          YC_TOKEN: ${{ secrets.YC_OAUTH_TOKEN }}
          IMAGE_TAG: ${{ inputs.release }}_latest
        run: |
          echo "Checking for image: $IMAGE_NAME:$IMAGE_TAG"

          RESPONSE=$(curl -s -H "Authorization: Bearer $YC_TOKEN" \
            "https://container-registry.api.cloud.yandex.net/container-registry/v1/images?registryId=$REGISTRY_ID&name=$IMAGE_NAME&tag=$IMAGE_TAG")

          echo "Registry response: $RESPONSE"

          IMAGE_ID=$(echo "$RESPONSE" | jq -r '.images[0].id // empty')

          if [ -z "$IMAGE_ID" ]; then
            echo "Image '$IMAGE_NAME:$IMAGE_TAG' not found in registry"
            exit 1
          else
            echo "Image exists: ID = $IMAGE_ID"
          fi

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull $REGISTRY/$IMAGE_NAME:${{ inputs.release }}_latest
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 80:3000 $REGISTRY/$IMAGE_NAME:${{ inputs.release }}_latest

      - name: Find issue for release
        id: find_issue
        uses: actions/github-script@v7
        with:
          script: |
            const version = "${{ inputs.release }}";
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open"
            });

            const issue = issues.find(i => i.title.trim() === `Релиз ${version}`);
            if (!issue) {
              throw new Error(`No issue found for release ${version}`);
            }

            core.setOutput("number", issue.number);

      - name: Get current date
        id: date
        run: echo "value=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Add comment to release issue
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.find_issue.outputs.number }}
          body: |
            Прод релиз выкачан

            - Дата: ${{ steps.date.outputs.value }}
            - Запустил: @${{ github.actor }}
            - Образ: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.release }}_latest`
